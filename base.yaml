---
- hosts: all
  become: true
  gather_facts: yes
  handlers:
    - name: docker status
      service: name=docker state=started
    - name: kubelet status
      service: name=kubelet state=started
    - name: containerd status
      service: name=containerd state=started
  tasks:
  - name: Remove existing Docker Kubernetes packages
    apt:
      name: "{{ packages }}"
      state: absent
      update_cache: yes
    vars:
      packages:
      - docker.io 
      - kubelet 
      - kubeadm 
      - kubectl 
      - kubernetes-cni 
      - docker-ce 
      - docker
      - docker-engine
      - containerd
      - runc

  - name: Recursively remove directory
    ansible.builtin.file:
      path: "{{ item }}"
      state: absent
    with_items:
      - /root/.kube 
      - /etc/cni/net.d 
      - /etc/kubernetes 
      - /var/lib/etcd 
      - /var/lib/kubelet 
      - /var/run/kubernetes 
      - /var/lib/cni 
      - /opt/cni

  - name: Iptables flush filter
    ansible.builtin.iptables:
      flush: yes
  
  - name: Just force systemd to reread configs (2.4 and above)
    ansible.builtin.systemd:
      daemon_reload: yes

  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - lsb-release
      - gnupg
      - software-properties-common
      - wget
  
  - name: Install Linux Headers for the kernelversion
    apt:
      name: linux-headers-{{ ansible_kernel }}
      state: present
      update_cache: true

  - name: Recursively remove directory
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      recurse: yes
    with_items:
      - /etc/apt/keyrings

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present
  
  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - etcd-client
      - vim
      - build-essential
      - bash-completion
      - binutils
      - apparmor-utils
      - docker-ce 
      - docker-ce-cli 
      - containerd.io
      - "kubelet={{ kube_version }}-00"
      - "kubeadm={{ kube_version }}-00"
      - "kubectl={{ kube_version }}-00"
      - kubernetes-cni=0.8.7-00
    notify:
      - docker status

  - name: Create new directory for Docker
    ansible.builtin.file:
      path: /etc/systemd/system/docker.service.d
      state: directory
      recurse: yes
  
  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Deploy Docker daemon.json.
    copy:
      src: daemon.json
      dest: /etc/docker/daemon.json

  - name: Enable service docker
    ansible.builtin.systemd:
      name: docker
      enabled: yes

  - name: Remove useless packages from the cache
    apt:
      autoclean: yes

  - name: Remove dependencies that are no longer required
    apt:
      autoremove: yes

  - name: Create new directory for installer scripts
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      recurse: yes
    with_items:
      - /etc/k8s-scripts
      - /etc/k8s-init-scripts

  - name: Copy Initialization Scripts
    ansible.builtin.copy:
      remote_src: yes
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      mode: '0755'
    with_items:
      - { src: /vagrant/master.yaml, dest: /etc/k8s-scripts/master.yaml }
      - { src: /vagrant/worker.yaml, dest: /etc/k8s-scripts/worker.yaml }
      - { src: /vagrant/set-custom-rc.sh, dest: /etc/k8s-init-scripts/set-custom-rc.sh }
      - { src: /vagrant/approve-nodes.sh, dest: /etc/k8s-init-scripts/approve-nodes.sh }
      - { src: /vagrant/kubeadm-config.yaml, dest: /etc/k8s-init-scripts/kubeadm-config.yaml }
      - { src: /vagrant/metallb-config.yaml, dest: /etc/k8s-init-scripts/metallb-config.yaml }
      - { src: /vagrant/enable-olm.sh, dest: /etc/k8s-init-scripts/enable-olm.sh }
      - { src: /vagrant/containerd-config.yaml, dest: /etc/containerd/config.toml }
      
  - name: Restart kubelet and docker daemon
    service:
      name: "{{ item }}"
      daemon_reload: yes
      state: restarted
    with_items:
      - docker
      - kubelet
      - containerd
    notify:
      - docker status
      - kubelet status
      - containerd status

  - name: Pull Kubernetes images
    shell: kubeadm config images pull